#summary rar2fs man page
#labels Featured
{{{
RAR2FS(1)                                                        User Commands                                                       RAR2FS(1)



NAME
       rar2fs - FUSE file system for reading RAR archives

SYNOPSIS
       rar2fs [options] <root dir> <mount point>

DESCRIPTION
       rar2fs is a FUSE based file system that can mount a source directory containing any number of RAR archive files and access the contents
       of those as plain files (read only). Regular files/directories located in the source directory are  handled  transparently.  Both  com-
       pressed  and  non-compressed  (store)  archives/volumes  are supported but full seek support in raw mode is only available for non-com-
       pressed archives.

       This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as  published
       by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

       This  program  is  distributed  in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MER-
       CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You  should  have  received  a
       copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>


OPTIONS
       Besides the standard FUSE options rar2fs accepts the following options that can be passed to the program.

       --img-type=".<ext>[;.<ext>;...]"
              additional image file type extensions

              The  default  image  file  types  recognized by rar2fs is .img, .nrg and .iso. This option will allow more file extensions to be
              added. It affects the behavior of the --show-comp-img , --preopen-img and --fake-iso options.

       --show-comp-img
              show image file types also for compressed/encrypted archives

              Image media files in compressed/encrypted archives usually does not playback very well, if at all. This is because imaged media,
              such  as  DVD  images,  is  implementing a file access pattern that can not be fully supported by a partly buffered decoded data
              stream with limited history. For that reason the default is to not display these files (hide).

       --preopen-img
              prefetch volume file descriptors for image file types

              This option will force all volume files to be opened before playback is started. Specifying this option might help in some  rare
              situations  to overcome transient playback disturbances at switch of volume files when mounted across a lossy/slow network. Note
              that this option only affects playback of image file media read in raw mode (not compressed/encrypted).

       --fake-iso=".<ext>[;.<ext>;...]"

       --fake-iso
              fake .iso extension for specified image file types

              Some media players does not support display of image files other than those with a .iso extension. However, .img files are  usu-
              ally  100%  compatible with .iso and so is .nrg files, even though the .nrg format specification says otherwise. For that reason
              playback of .nrg might fail. Specifying this option will remove the need for renaming certain file types to .iso  just  to  make
              them display properly. If playback works or not is all about the player software from here. Each file extension/type in the list
              should be separated by a semi-colon ';' character. It is also possible not to provide any image file type extensions  for  which
              the default .img and .nrg will be displayed as .iso together with what was specified in --img-type.

       --seek-length=n
              set number of volume files that are traversed in search for headers [0=All]

              Normally  the RAR specific header(s) describing the files contained in a volume is located in the first volume file. Providing a
              value of 1 here should thus be sufficient to cover most cases. The default is 0, meaning that the complete set of volumes  files
              are  searched for headers.  The lower the value (starting from 1) the faster the display of folders containing a lot of RAR vol-
              umes (or volumes with a lot of files) will become since the number of open/search/close requests can be reduced.

       --seek-depth=n
              set number of levels down RAR files are parsed inside main archive [0=0ff]

              Currently only a depth of one (1) is supported. Setting seek depth to anything greater than this has no effect.

       --no-idx-mmap
              use direct file I/O instead of mmap() for .r2i files

       --exclude="<file>[;<file>;...]"

       --exclude=<path>
              exclude file filter

              When file access is requested and the file can not be found on the local file system all RAR archives in target folder are  also
              searched  for it. Not until that last operation fails the file is considered missing. On some platforms certain files (eg. .lock
              files) are always accessed but are usually never to expect within a RAR archive.  Specifying this option will treat  the  listed
              files  differently.  If  not found on local file system they will never be searched for in the local RAR archives. This dramati-
              cally decrease the folder load/display time during 'ls' like operations on such systems.  Each file in the list should be  sepa-
              rated by a semi-colon ';' character.

              It is also possible to use this option in such a way that it instead points to a file that lists the actual exclude filter. This
              is done by specifying an absolute file path (starting with '/') instead of a semi-colon separated list of file names.  The  file
              pointed to may contain more than one line but for each line files should be separated by a semi-colon ';' character.

       --unrar-path=<path>
              path to external unrar binary (override unrarlib)

       --no-password
              disable password file support

              Since rar2fs is non-interactive, passwords that are to be used to decrypt encrypted archives should be stored in a file with the
              same name as the main archive/volume file but with a .pwd extension. Beware that a password must be stored in clear text  format
              and is thus not protected in any way from unauthorized access. Specifying this option will disable the support for encrypted ar-
              chives.

       --no-smp
              disable SMP support (bind to CPU #0)

              Note that this option is only available on Linux based platforms with support for the cpu_set_t type (GNU  exten-
              sion).

       --no-lib-check
              disable dynamic library consistency check

              At startup rar2fs validates that the dynamic libraries libfuse.so and libunrar.so are compatible/consistent with what  was  used
              during compilation.  Use this option to by-pass this check, eg. if rar2fs is linked statically. Other use of this option is dis-
              couraged.

BUGS
       -

SEE ALSO
       Project home page <http://code.google.com/p/rar2fs/>

AUTHOR
       Hans Beck√©rus
       <hans.beckerus@gmail.com>




Wed, January 26, 2011                                                 v                                                              RAR2FS(1)
}}}